const BRIGHTTHRESH=90,COLORTHRESH=70,PSYCHWAITTIME=8e3,MOTION_LINE=1,MOTION_REV=2,detectionOptions={withLandmarks:!0,withDescriptors:!1};let faceapi,detections,poseNet,pose,app={pixelSize:5,nodeDim:15,numNodes:2,nodeCollideThresh:35,drawSquare:!0,trackR:255,trackG:255,trackB:255,fillR:255,fillG:0,fillB:0,cthresh:0,bthresh:0,useShader:!1,motion:MOTION_LINE,ns:.01,faceOnly:!0,leftPart:"leftEye",rightPart:"rightEye"},saved=[],savedColors=[],nodes=[],faceX=0,faceY=0,faceW=0,faceH=0,init=!1;function setup(){createCanvas(640,480),capture=createCapture(VIDEO,videoReady),capture.hide(),(poseNet=ml5.poseNet(capture,modelLoaded)).on("pose",gotPoses),faceapi=ml5.faceApi(capture,detectionOptions,modelReady),app.bthresh=BRIGHTTHRESH,app.cthresh=COLORTHRESH,setFillColors({mode:"random"}),colorMode(HSB,100)}function videoReady(){for(let e=0;e<app.numNodes;e++){let o={},t=parseInt(random(10))%2==0?app.pixelSize:-app.pixelSize,i=100/app.numNodes;o.color=color(parseInt(i*(e+1)),50,75),o.speed=t+parseInt(random(0,2)),o.dim=app.nodeDim,o.x=random(width),o.y=random(height),nodes[e]=new PixNode(o)}init=!0}function modelLoaded(){console.log("poseNet ready")}function modelReady(){console.log("faceapi ready!"),console.log(faceapi),faceapi.detect(gotResults)}function gotResults(e,o){e?console.log(e):((detections=o)&&detections.length>0&&drawBox(detections),faceapi.detect(gotResults))}function drawBox(e){for(let o=0;o<e.length;o+=1){const t=e[o].alignedRect;faceX=width-t._box._x-1,faceY=t._box._y,faceW=t._box._width,faceH=t._box._height}}function gotPoses(e){e.length>0&&(pose=e[0].pose)}function draw(){if(!init)return;let e=app.ns;capture.loadPixels(),colorMode(RGB,255),background(255),saved=[],savedColors=[];for(let o=0;o<capture.width;o+=app.pixelSize)for(let t=0;t<capture.height;t+=app.pixelSize){let i=getLocColor(width-o-1,t);if(!app.faceOnly||app.faceOnly&&o>=faceX-faceW&&t>=faceY&&o<=faceX&&t<=faceY+faceH){if(dist(red(i),green(i),blue(i),app.trackR,app.trackG,app.trackB)<app.cthresh&&(savedColors[o]||(savedColors[o]=[]),savedColors[o][t]=1),savedColors[o]&&1==savedColors[o][t]){let s=color(app.fillR,app.fillG,app.fillB);colorMode(HSB,100),app.useShader&&(s=getShaderColor(s,o,t,e)),fill(hue(s),saturation(s),2*brightness(i)),drawPixel(app.pixelSize,app.drawSquare,o,t),colorMode(RGB,255)}}if(brightness(i)>app.bthresh){{saved[o]||(saved[o]=[]),saved[o][t]=new PsychPix(width-o-1,t);let e=saved[o][t].getNode();if(!e||null==e){let e=height/nodes.length,i=null;for(let o=0;o<nodes.length;o++)if(t>=e*o&&t<e*(o+1)){i=o;break}saved[o][t].setNode(nodes[i])}}saved[o][t].setColor(i,e)}else saved[o]&&null!=saved[o][t]&&saved[o][t].hide()}for(let e=0;e<capture.width;e+=app.pixelSize)for(let o=0;o<capture.height;o+=app.pixelSize)saved[e]&&saved[e][o]&&saved[e][o].display();for(let e=0;e<nodes.length;e++)nodes[e].draw(),nodes[e].move();if(pose)for(let e=0;e<nodes.length;e++)for(let o=0;o<nodes.length;o++){let t=nodes[e];if(e!=o&&!nodes[e].collision&&!nodes[o].collision&&abs(nodes[e].location.x-nodes[o].location.x)<app.nodeCollideThresh&&abs(nodes[e].location.y-nodes[o].location.y)<app.nodeCollideThresh&&nodes[e].collide(nodes[o]),!t.locked&&!t.lockWait&&app.motion!=MOTION_REV){let e=pose[app.leftPart],o=pose[app.rightPart],i=abs(t.location.y-e.y),s=abs(t.location.x-(width-e.x-1)),a=abs(t.location.y-o.y),l=abs(t.location.x-(width-o.x-1));i<=app.nodeCollideThresh+20&&s<=app.nodeCollideThresh+20?t.lock(app.leftPart):a<=app.nodeCollideThresh+20&&l<=app.nodeCollideThresh+20&&t.lock(app.rightPart)}}}class PixNode{constructor(e){this.info=e,this.location=createVector(e.x,e.y),this.velocity=createVector(e.speed,e.speed),this.dim=e.dim,this.speed=e.speed,this.color=e.color,this.collision=!1,this.angle=0,this.angleDir=1,this.locked=!1,this.lockWait=!1}move(){this.locked||(app.motion==MOTION_LINE?(this.location.add(this.velocity),this.location.x>=width&&(this.location.x=width-1,this.velocity.x=-this.velocity.x-parseInt(random(-2,2))),this.location.x<=0&&(this.location.x=0,this.velocity.x=abs(this.velocity.x)+parseInt(random(-2,2))),this.location.y>=height&&(this.location.y=height-1,this.velocity.y=-this.velocity.y-parseInt(random(-2,2))),this.location.y<=0&&(this.location.y=0,this.velocity.y=abs(this.velocity.y)+parseInt(random(-2,2)))):app.motion==MOTION_REV&&(push(),translate(this.location.x,this.location.y),this.location.rotate(this.angle),0==this.angleDir?(this.angle-=.001,this.angle<=0&&(this.angleDir=1,this.angle=0)):(this.angle+=.001,this.angle>=1&&(this.angleDir=0,this.angle=1)),pop()))}collide(e){if(!this.locked&&app.motion==MOTION_LINE){let o=this,t=createVector(this.velocity.x,this.velocity.y);this.velocity.set(e.velocity.x,e.velocity.y),e.velocity.set(t.x,t.y),e.collision=!0,this.collision=!0,console.log("COLLISION!"),setTimeout(function(){e.collision=!1,o.collision=!1},100)}}draw(){fill(this.color),noStroke(),this.locked&&(this.location.x=width-pose[this.part].x-1,this.location.y=pose[this.part].y),ellipse(this.location.x,this.location.y,this.dim,this.dim)}lock(e){this.locked=!0,this.part=e}unlock(){let e=this;this.locked=!1,this.part=null,this.lockWait=!0,setTimeout(function(){e.lockWait=!1},1e3)}}class PsychPix{constructor(e,o){this.location=createVector(e,o),this.velocity=createVector(0,0),this.add=!0,this.amt=10,this.sum=0,this.node=null,this.color=null}getNode(){return this.node}setNode(e){this.node=e}move(){this.velocity=createVector(this.amt,this.amt),this.add?(this.location.add(this.velocity),this.sum+=this.amt):(this.location.sub(this.velocity),this.sum-=this.amt),this.sum>100&&this.add?this.add=!1:this.sum<=0&&!this.add&&(this.add=!0)}setColor(e,o){app.useShader&&(e=getRGBShader(e,this.location.x,this.location.y,o)),this.color=e}display(){stroke(this.color),strokeWeight(app.pixelSize),line(this.node.location.x,this.node.location.y,width-this.location.x-1,this.location.y)}hide(){}}function setFillColors(e){switch(e.mode){case"random":app.fillR=random(255),app.fillG=random(255),app.fillB=random(255)}}function mouseClicked(){let e=4*(width-mouseX-1+mouseY*capture.width);app.trackR=capture.pixels[e],app.trackG=capture.pixels[e+1],app.trackB=capture.pixels[e+2]}function keyPressed(){for(let e=0;e<nodes.length;e++)81==keyCode?(nodes[e].velocity.x*=2,nodes[e].velocity.y*=2):87==keyCode?(nodes[e].velocity.x=parseInt(nodes[e].velocity.x/2),nodes[e].velocity.y=parseInt(nodes[e].velocity.y/2),nodes[e].velocity.x<=0&&(nodes[e].velocity.x=1),nodes[e].velocity.y<=0&&(nodes[e].velocity.y=1)):85==keyCode&&nodes[e].unlock();90==keyCode?app.useShader=!app.useShader:88==keyCode?app.motion==MOTION_LINE?app.motion=MOTION_REV:app.motion==MOTION_REV&&(app.motion=MOTION_LINE):65==keyCode?app.ns=random(0,1)/100:67==keyCode?setFillColors({mode:"random"}):70==keyCode&&(app.faceOnly=!app.faceOnly)}function drawPixel(e,o,t,i){noStroke(),o?square(t,i,e):ellipse(t,i,e,e)}function getLocColor(e,o){let t=4*(e+o*capture.width),i=capture.pixels[t],s=capture.pixels[t+1],a=capture.pixels[t+2];return color(i,s,a)}function getShaderColor(e,o,t,i){let s=hue(e),a=saturation(e),l=brightness(e),n=noise((s+o)*i,(s+t)*i),c=noise((a+o)*i,(a+t)*i),d=noise((l+o)*i,(l+t)*i);return e=color(s*n,a*c,l*d*2)}function getRGBShader(e,o,t,i){let s=red(e),a=green(e),l=blue(e);if(i){let n=noise((s+o)*i,(s+t)*i),c=noise((a+o)*i,(a+t)*i),d=noise((l+o)*i,(l+t)*i);e=color(s*n,a*c,l*d),colorMode(HSB,100),e=color(hue(e),saturation(e),2*brightness(e)),colorMode(RGB,255)}return e}